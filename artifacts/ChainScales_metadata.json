{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "DocumentTransfer",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "GetBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_hash",
						"type": "string"
					}
				],
				"name": "GetDataByHash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "hash",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "creation",
								"type": "uint256"
							}
						],
						"internalType": "struct ChainScales.units",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "GetHashById",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "hash",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "creation",
								"type": "uint256"
							}
						],
						"internalType": "struct ChainScales.units",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "hash",
						"type": "string"
					}
				],
				"name": "GetHashId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "GetHashesByOwner",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "hash",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "creation",
								"type": "uint256"
							}
						],
						"internalType": "struct ChainScales.units[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "GetPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "NewHash",
						"type": "string"
					}
				],
				"name": "RegisterNewDocument",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "UpdatePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WithdrawBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "recipient",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"List.sol": "ChainScales"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"List.sol": {
			"keccak256": "0xf83746517a6cad6a29c7408ea029a2c7565550e784936c5bff14a398477717cf",
			"license": "Unlicense",
			"urls": [
				"bzz-raw://8b151f3f298e9dc2977c4b13c1c46a66eb5e85818567ef26ce571dcc0060a9c8",
				"dweb:/ipfs/QmWGq91wtG6DyzQBwKycuVp9oSWLCGt7688Vtt5Pws5emf"
			]
		},
		"libs/SafeERC20.sol": {
			"keccak256": "0x773ace515667740021cc72b385e5a7a5a516daf4a5285f3d76c00479834c3662",
			"urls": [
				"bzz-raw://b15a4c658b64687fa8a27b3c569e943c450b27b1db3c1685c5831c466f0ecb45",
				"dweb:/ipfs/QmSnkKynTaqP11WGZ1UFB3uhYDqk84iLjp7j8x1DGfsLqa"
			]
		},
		"libs/address.sol": {
			"keccak256": "0xfdf20576abb62b59ca2a7a1c69b267d074cdbf81cec0e24d916b04ef2800d5ea",
			"urls": [
				"bzz-raw://01a0d8c7f6b260161c09693d56e89f77683bf6a7f6d2fa0679f9a1eaeeb9a2ad",
				"dweb:/ipfs/QmTVj1X5XZXFVxuVm9GGmEaHmK9q6CgAgfiJ4TCi4QYg2F"
			]
		},
		"libs/context.sol": {
			"keccak256": "0xae6dde43b85829efcfd193b543a0b07bd20c81ad5a1b98980b32c385d4201be6",
			"urls": [
				"bzz-raw://b8ba015d38a4eae12da57371aa2aa30bc85e9f10eb00465490882e375e0fee3f",
				"dweb:/ipfs/QmXCR5fb3JcPZDT1NQv5QuywPiywnEEpzbMSg9Yh1TCtFW"
			]
		},
		"libs/ownable.sol": {
			"keccak256": "0xc38aa36002cdaef9ee59eb4ab5515f539b93b03b45bed1ed0ab1c33770165dad",
			"urls": [
				"bzz-raw://58f7b535bfe763c1020031f91a9b281c049db72012550fb6cb2ffdfd37dd11ca",
				"dweb:/ipfs/Qmbg64aub8oWRzkicZ4w4hhBv9ep8UWEziD1FmiPStuaPa"
			]
		}
	},
	"version": 1
}